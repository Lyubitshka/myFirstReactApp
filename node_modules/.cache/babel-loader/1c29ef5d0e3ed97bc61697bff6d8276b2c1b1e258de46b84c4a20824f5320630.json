{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andor\\\\Desktop\\\\react-project\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: Jan,\n    value: 0\n  }, {\n    label: Feb,\n    value: 0\n  }, {\n    label: Mar,\n    value: 0\n  }, {\n    label: Apr,\n    value: 0\n  }, {\n    label: May,\n    value: 0\n  }, {\n    label: Jun,\n    value: 0\n  }, {\n    label: Jul,\n    value: 0\n  }, {\n    label: Aug,\n    value: 0\n  }, {\n    label: Sep,\n    value: 0\n  }, {\n    label: Oct,\n    value: 0\n  }, {\n    label: Nov,\n    value: 0\n  }, {\n    label: Dec,\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // Jan = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","chartDataPoints","label","Jan","value","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/andor/Desktop/react-project/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: Jan, value: 0 },\r\n        { label: Feb, value: 0 },\r\n        { label: Mar, value: 0 },\r\n        { label: Apr, value: 0 },\r\n        { label: May, value: 0 },\r\n        { label: Jun, value: 0 },\r\n        { label: Jul, value: 0 },\r\n        { label: Aug, value: 0 },\r\n        { label: Sep, value: 0 },\r\n        { label: Oct, value: 0 },\r\n        { label: Nov, value: 0 },\r\n        { label: Dec, value: 0 },\r\n    ];\r\n\r\n    for (const expense in props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // Jan = 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints} />\r\n    )\r\n}\r\n\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC;AAEnC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC7B,MAAMC,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAEC,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEG,GAAG;IAAED,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEI,GAAG;IAAEF,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEK,GAAG;IAAEH,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEM,GAAG;IAAEJ,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEO,GAAG;IAAEL,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEQ,GAAG;IAAEN,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAES,GAAG;IAAEP,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEU,GAAG;IAAER,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEW,GAAG;IAAET,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEY,GAAG;IAAEV,KAAK,EAAE;EAAE,CAAC,EACxB;IAAEF,KAAK,EAAEa,GAAG;IAAEX,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,MAAMY,OAAO,IAAIhB,KAAK,CAACiB,QAAQ,EAAE;IAClC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IAC9CnB,eAAe,CAACiB,YAAY,CAAC,CAACd,KAAK,IAAIY,OAAO,CAACK,MAAM;EACzD;EAEA,oBACI,QAAC,KAAK;IAAC,UAAU,EAAEpB;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;AAE9C,CAAC;AAAA,KAxBKF,aAAa;AA0BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}